#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CSportax1 wrapper class

class CSportax1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CSportax1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x14E95046, 0xBEC7, 0x46D2, { 0xB9, 0xE3, 0x74, 0xB1, 0xAD, 0x14, 0xAC, 0x65 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:


// Operations
public:

// ISPortAx

// Functions
//

BOOL Open(LPCTSTR Port)
{
	BOOL result;
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, Port);
	return result;
}
BOOL Close()
{
	BOOL result;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}
long Read(unsigned char * Buf, long * Count)
{
	long result;
	static BYTE parms[] = VTS_PUI1 VTS_PI4 ;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Buf, Count);
	return result;
}
long Write(unsigned char * Buf, long Count)
{
	long result;
	static BYTE parms[] = VTS_PUI1 VTS_I4 ;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_I4, (void*)&result, parms, Buf, Count);
	return result;
}
CString ReadStr()
{
	CString result;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}
long WriteStr(LPCTSTR String)
{
	long result;
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_I4, (void*)&result, parms, String);
	return result;
}
BOOL PurgeQueue()
{
	BOOL result;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}
long get_Handle()
{
	long result;
	InvokeHelper(0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
BOOL get_IsOpened()
{
	BOOL result;
	InvokeHelper(0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DTR(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
void put_RTS(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_InCount()
{
	long result;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
unsigned char get_Databits()
{
	unsigned char result;
	InvokeHelper(0xd, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_Databits(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_MonitorEvents()
{
	long result;
	InvokeHelper(0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_MonitorEvents(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned char get_Parity()
{
	unsigned char result;
	InvokeHelper(0xf, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_Parity(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_Cts()
{
	BOOL result;
	InvokeHelper(0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
BOOL get_Dsr()
{
	BOOL result;
	InvokeHelper(0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
unsigned char get_StopBits()
{
	unsigned char result;
	InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_StopBits(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_HandShake()
{
	long result;
	InvokeHelper(0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_HandShake(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_FlowReplace()
{
	long result;
	InvokeHelper(0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_FlowReplace(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_XOnLimit()
{
	long result;
	InvokeHelper(0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_XOnLimit(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_XOffLimit()
{
	long result;
	InvokeHelper(0x16, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_XOffLimit(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned char get_CharEof()
{
	unsigned char result;
	InvokeHelper(0x17, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_CharEof(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned char get_CharError()
{
	unsigned char result;
	InvokeHelper(0x18, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_CharError(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned char get_CharBreak()
{
	unsigned char result;
	InvokeHelper(0x19, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_CharBreak(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned char get_CharEvent()
{
	unsigned char result;
	InvokeHelper(0x1a, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_CharEvent(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned char get_CharXOn()
{
	unsigned char result;
	InvokeHelper(0x1b, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_CharXOn(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned char get_CharXOff()
{
	unsigned char result;
	InvokeHelper(0x1c, DISPATCH_PROPERTYGET, VT_UI1, (void*)&result, NULL);
	return result;
}
void put_CharXOff(unsigned char newValue)
{
	static BYTE parms[] = VTS_UI1 ;
	InvokeHelper(0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_OutCount()
{
	long result;
	InvokeHelper(0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
long get_BaudRate()
{
	long result;
	InvokeHelper(0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_BaudRate(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_InBufferSize()
{
	long result;
	InvokeHelper(0x1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_InBufferSize(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_OutBufferSize()
{
	long result;
	InvokeHelper(0x20, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_OutBufferSize(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
void put_Break(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_TimeoutReadInterval()
{
	long result;
	InvokeHelper(0x22, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_TimeoutReadInterval(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_TimeoutReadTotalMultiplier()
{
	long result;
	InvokeHelper(0x23, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_TimeoutReadTotalMultiplier(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_TimeoutReadTotalConstant()
{
	long result;
	InvokeHelper(0x24, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_TimeoutReadTotalConstant(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_TimeoutWriteTotalMultiplier()
{
	long result;
	InvokeHelper(0x25, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_TimeoutWriteTotalMultiplier(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_TimeoutWriteTotalConstant()
{
	long result;
	InvokeHelper(0x26, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_TimeoutWriteTotalConstant(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_Dcd()
{
	BOOL result;
	InvokeHelper(0x27, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void InitString(LPCTSTR String)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_EMPTY, NULL, parms, String);
}
long get_CountPorts()
{
	long result;
	InvokeHelper(0x29, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
CString GetPortName(long iNumber)
{
	CString result;
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms, iNumber);
	return result;
}

// Properties
//



};
